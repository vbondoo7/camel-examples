<?xml version="1.0"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="    http://www.springframework.org/schema/beans      http://www.springframework.org/schema/beans/spring-beans.xsd                   http://camel.apache.org/schema/spring     http://camel.apache.org/schema/spring/camel-spring.xsd           http://www.springframework.org/schema/security   http://www.springframework.org/schema/security/spring-security-4.1.xsd           http://www.springframework.org/schema/context    http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- ############################################################################################ -->
	<!-- ###   This file replaces sensitive properties at runtime with Kubernetes secrets.        ### -->
	<!-- ###   Follow the pattern described below to define new secrets for your project.         ### -->
	<!-- ###   use the spring "ref" attribute to specify the value of a secret instead of         ### -->
	<!-- ###   where you may have used the ${myPropertyName} notation previously.                 ### -->
	<!-- ###   Ex:                                                                                ### -->
	<!-- ###       Instead of: value="${myPropertyNameThatIsSensitiveAndShouldntBeInClearText}"   ### -->
	<!-- ###       Use:        ref="beanIdThatIsDefinedInThisFile"                                ### -->
	<!-- ###                                                                                      ### -->
	<!-- ###   Copy this file over to the classpath:properties/local/ directory and replace       ### -->
	<!-- ###   the value with the real value for testing locally from your machine.               ### -->
	<!-- ###   Ex:                                                                                ### -->
	<!-- ###       Instead of: value="${#{systemEnvironment['SECRET_NAME']}}"                     ### -->
	<!-- ###       Use:        value="actualPassword"                                             ### -->
	<!-- ###                                                                                      ### -->
	<!-- ###   To manage your Kube secrets for Dev and Preprod Kube deployments, go to:           ### -->
	<!-- ###           https://rancher.odplabs.com/p/c-hczdr:p-x2hvw/secrets                      ### -->
	<!-- ###                                                                                      ### -->
	<!-- ###   IMPORTANT:: What you need to get injection to work:                                ### -->
	<!-- ###   ===========                                                                        ### -->
	<!-- ###   In the Jenkinsfile, add any new secrets to the "envs" array in the following       ### -->
	<!-- ###   format (please note the placements of single and double quote Characters:          ### -->
	<!-- ###   '{"secretEnv":{"name": "NAME_OF_SECRET_BEAN_IN_YOUR_SECRETS.XML_FILE",             ### -->
	<!-- ###	              "secretKey": "NAME_OF_SECERT_KEY_DEFINED_IN_rancher.odplabs.com",   ### -->
	<!-- ###		          "secretName": SECRET_NAME_AS_DEFINED_IN_rancher.odplabs.com"}}'     ### -->
	<!-- ###                                                                                      ### --> 
	<!-- ###   NOTE: we're standardizing on NAME_OF_SECRET_BEAN_IN_YOUR_SECRETS.XML_FILE be       ### -->
	<!-- ###   the same as NAME_OF_SECERT_KEY_DEFINED_IN_rancher.odplabs.com                      ### -->
	<!-- ############################################################################################ -->


	<!-- These are secrets needed by the framework -->
	<bean class="java.lang.String" id="JWT_SECRET_KEY"><constructor-arg value="secret"/></bean>
	<bean class="java.lang.String" id="ERRORANDAUDIT_MESSAGING_PROVIDER_USERNAME"><constructor-arg value="eiadmin@officedepot.com"/></bean>
	<bean class="java.lang.String" id="ERRORANDAUDIT_MESSAGING_PROVIDER_PASSWORD"><constructor-arg value="officedepot"/></bean>

	<!-- Place you service secrets below this line -->
	
</beans>
